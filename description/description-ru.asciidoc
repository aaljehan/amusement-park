:imagesdir: ./images-ru/
= Проектирование программ в интеллектуальных системах

== 1. Описание объектной модели парка развлечений

*Парк развлечений(ПР)* -- комплекс культурно-развлекательных, спортивно-оздоровительных и рекреационных услуг, предназначенный для отдыха людей, а также совокупность разнообразных аттракционов, расположенных на одной территории и предоставляющих эти услуги.

*Симуляция ПР* -- имитация жизненного цикла парка как экономической единицы, смысл которой дать пользователю возможность самостоятельно изучить его механизмы.

*Пользователь* -- лицо или организация, которое использует действующую систему для выполнения конкретной функций.

*Цель пользователя* -- развить парк, используя имеющиеся ресурсы. Конечным состоянием ПР является наличие в нем 10 аттракционов. 

*Аттракцион* -- сооружение или устройство, созданное для развлечений. В симуляции он имеет следующие параметры: название, количество мест, время сеанса; пользователю доступны следующие действия над ним: добавление, удаление, запуск.

*Посетитель* -- человек, который посетил или посещает ПР. В симуляции им управляет пользователь, которому доступны такие функции, как: добавление, удаление, "покинуть ПР".

*Билет* -- документ, удостоверяющий право пользоваться чем-либо за плату.

Для старта симуляции необходимо нажать кнопку _start_ и создать хотя бы _1 посетителя_. Создается очередь на покупку билетов.
Сущность посетителя включает в себя 2 поля:

* `id` -- 6-значный уникальный номер (генерируется рандомно),
* `money` -- число, обозначающее количество денежных средств (указывается пользователем), имеет значение от 1 до 100.

В начале существования ПР (начало программы) он имеет *2 аттракциона* и *0$* выручки. *Максимальное количество аттракционов*, установленных в парке равняется *10*.

Стоимость посещения парка (`ticketPrice`) вычисляется по формуле `*ticketPrice = 10$ * attractionAmount*`. Где `attractionAmount` равняется количеству аттракционов. 

При наличии достаточного количества денежных средств (`money >= ticketPrice`), посетитель переносится в список людей, гуляющих по главной аллее, по результатам покупки билета.*Иначе он удаляется* из симуляции. На счет посетителя возвращается остаток средств в случае если (`money > ticketPrice`).
Попав на территорию парка, посетитель начинает гулять по главной аллее парка, пока пользователь не определит его на какой-либо аттракцион. При попадании на аттракцион, посетитель добавляется в очередь на аттракцион. Покатавшись, он возвращается гулять на главную аллею. При *удалении* посетителя, он *навсегда покидает ПР*. При выборе функции *покинуть ПР*, возвращается в очередь за билетами.

При "покупке" посетителем билета, выручка парка (`budget`) увеличивается на  сумму стоимости посещения парка (`budget=budget+ticketPrice`).

*Стоимость аттракциона* (`priceOfAttraction`) составляет *1000$*, после его покупки цена каждого *последующего* увеличивается на *+100$* в сравнении с предыдущей (`priceOfAttraction = priceOfAttraction + 100`). При добавлении аттракциона, пользователь задает ему уникальное название. Монтаж (добавление) и демонтаж (удаление) аттракционов происходит *только* в пустом ПР, то есть все посетители либо удалены, либо находятся в очереди за билетами.

*Количество мест*(`capacity`) на каждом аттракционе фиксировано и равно 5. *Длительность сеанса*(`rideTime`) также фиксирована и равняется 60 сек.

После запуска аттракциона количество занятых мест отображается как (2/10), где `2 = customersOnBoard; 10 = capacity`. Время сеанса отображается как (15/60), где `15 = currentRideTime; 60 = rideTime`.

Аттракцион запускается пользователем при наличии в очереди на него хотя бы одного посетителя. Если количество людей в очереди меньше, чем максимальная вместимость аттракциона, то садятся все посетители из очереди, иначе садятся первые n человек, где n – вместимость аттракциона.

После покупки 10 аттракциона, появляется сообщение об успешном *завершении симуляции*, все посетители из очередей и с главной аллеи удаляются, а посетители, которые уже катаются на аттракционах, завершают сеанс и сразу после этого удаляются из ПР.

=== _Пути развития_
. _Добавить сувенирную лавку;_
. _Добавить мелодию при нажатии кнопок;_
. _Добавить возможность видеть рейтинг при просмотре аттракциона._

== 2. Описание основных сценариев работы пользователя с программой
.Диаграмма сценариев использования
image::./uc.png[]

== 3. Разработка диаграммы активности
.Общая диаграмма активности. Действия ведутся на стороне "Игрока".
image::./main-activity-diagram.png[]

.Диаграмма активности "Работа с посетителями". Действия ведутся на стороне "Игрока".
image::./main-visitor-activity-diagram.png[]

.Диаграмма активности "Работа с парком аттракционов"
image::./main-attraction-activity-diagram.png[]

.Диаграмма активности "Добавить посетителя"
image::./add-visitor-activity-diagram.png[]

.Диаграмма активности "Удалить посетителя"
image::./delete-visitor-activity-diagram.png[]

.Диаграмма активности "Приобрести билеты"
image::./buy-ticket-activity-diagram.png[]

.Диаграмма активности "Определить посетителя на аттракцион"
image::./add-visitor-to-attraction-activity-diagram.png[]

.Диаграмма активности "Удалить посетителя из парка"
image::./remove-visitor-from-park-activity-diagram.png[]

.Диаграмма активности "Просмотр "Главной аллеи""
image::./view-valley-activity-diagram.png[]

.Диаграмма активности "Просмотр аттракциона"
image::./view-attraction-activity-diagram.png[]

.Диаграмма активности "Удаление аттракциона"
image::./delete-attraction-activity-diagram.png[]

.Диаграмма активности "Покупка аттракциона"
image::./buy-attraction-activity-diagram.png[]

.Диаграмма активности "Запуск аттракциона"
image::./turn-attraction-on-activity-diagram.png[]

== 4. Разработка диаграммы классов
.Диаграмма классов (классы, описывающие предметную область)
image::./new-class-1.png[]

.Диаграмма классов "UI-1"
image::./ui-class-shorten-1.png[]

.Диаграмма классов "UI-2"
image::./ui-class-shorten-2.png[]

.Диаграмма классов "UI-3"
image::./ui-class-shorten-3.png[]

.Диаграмма классов "UI-4"
image::./ui-class-shorten-4.png[]

.Диаграмма классов "UI-5"
image::./ui-class-shorten-5.png[]

.Диаграмма классов "UI-6"
image::./ui-button.png[]

== 5. Разработка диаграммы направлений развития
.Добавить сувенирную лавку
image::./class-develop-souvenir-shop-1.png[]

.Добавить музыкальное сопровождение
image::./class-develop-music-1.png[]

.Добавить рейтинг аттракционов
image::./class-develop-rating-1.png[]

== 6. Разработка диаграммы состояний
.Диаграмма состояний-1
image::./state-visitors.png[]

.Диаграмма состояний-2
image::./state-attractions.png[]

== 7. Разработка пользовательского интерфейса
.Стартовое меню
image::./ui-start.png[]

.Выбор подраздела для редактирования
image::./ui-edit.png[]

.Работа с посетителями
image::./ui-visitors-start.png[]

.Работа с аттракционами
image::./ui-attractions-start.png[]

.Просмотр "Главной Аллеи"
image::./ui-main-valley.png[]

.Просмотр аттракциона
image::./ui-attractions.png[]

== _done by_ 
==== _ст. гр. 821701_
=== _Жирко Мария_